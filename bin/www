// #!/usr/bin/env node
const express = require('express');
const path = require('path');
require('dotenv').config();
const app = express();
const PORT = process.env.PORT || 3001;
app.set('trust proxy', true)
app.use(express.json()); // to parse JSON bodies

if (process.env.ENV === "DEVELOPMENT"){
  const cors = require('cors');
  console.log("Using CORS in DEV environment")
  app.use(function(req, res, next) {
      res.header("Access-Control-Allow-Origin", "*"); // update to match the domain you will make the request from
      res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
      next();
  });    
  app.use(cors());
}

// Serve static files
app.use('/api/uploads', express.static(path.join(__dirname, '../public/uploads')));
// console.log('Uploads directory: ', path.join(__dirname, '../public/uploads'));


// Health check API route
app.get('/api/hello', (req, res) => {
  const currentTime = new Date();
  const today = currentTime.toLocaleString('en-UK'); // Example for US English locale
  res.json({ message: 'This is Hello from Flex API!', date: today });
});

// app.get('/api/talk_to_ai', async (req, res) => {

//   // *********** *********** *********** *********** *********** *********** ***********
//   // IMPORTANT TBD - Move this route to application and use proper userID of a logged in user 
//   // *********** *********** *********** *********** *********** *********** ***********
//   const userQuery = req.query.userQuery
//   const userID = "raj_for_session_id" //need to change this
//   console.log("Req query... ", userQuery)
//     try {
//         const apiUrl = "http://13.57.185.244:5603/resume_query?query="+userQuery+"&user_id="+userID; // Gen AI API endpoint
//         const response = await fetch(apiUrl);

//         if (!response.ok) {
//             throw new Error(`HTTP error! status: ${response.status}`);
//         }

//         const data = await response.json();
//         res.json(data); // Send the fetched data back to the client
//     } catch (error) {
//         console.error('Error fetching data:', error);
//         res.status(500).json({ error: 'Failed to fetch data from GenAI API' });
//     }
// });

// Mount the routers at /api/...
const genAIRouter = require('../routes/genAI');
app.use('/api/genAI', genAIRouter);
const applicationRouter = require('../routes/application');
app.use('/api/application', applicationRouter);
const categoriesRouter = require('../routes/categories');
app.use('/api/categories', categoriesRouter);
const clientsRouter = require('../routes/clients');
app.use('/api/clients', clientsRouter);
const employeesRouter = require('../routes/employees');
app.use('/api/employees', employeesRouter);
const hiringsRouter = require('../routes/hirings');
app.use('/api/hirings', hiringsRouter);
const indexRouter = require('../routes/index');
app.use('/api/index', indexRouter);
const officeLocationsRouter = require('../routes/officeLocations');
app.use('/api/officeLocation', officeLocationsRouter);
const projectAllocationsRouter = require('../routes/projectAllocations');
app.use('/api/empPrjAloc', projectAllocationsRouter);
const projectsRouter = require('../routes/projects');
app.use('/api/projects', projectsRouter);
const projectUtilizationsRouter = require('../routes/projecUtilizations');
app.use('/api/empPrjUtili', projectUtilizationsRouter);
const reportsRouter = require('../routes/reports');
app.use('/api/reports', reportsRouter);
const timesheetsRouter = require('../routes/timesheets');
app.use('/api/timesheets', timesheetsRouter);
const usersRouter = require('../routes/users');
app.use('/api/users', usersRouter);

app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
